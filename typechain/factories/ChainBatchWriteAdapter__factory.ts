/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainBatchWriteAdapter,
  ChainBatchWriteAdapterInterface,
} from "../ChainBatchWriteAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "CallFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    inputs: [],
    name: "LastDataRecordId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "canCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytesData",
        type: "bytes",
      },
    ],
    name: "fulfillBytes",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestBytes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ce68061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639bc17db81161005b5780639bc17db8146100b4578063c2fb8523146100d2578063cb6e7a8914610102578063f2fde38b146101325761007d565b806311411e8a14610082578063715018a61461008c5780638da5cb5b14610096575b600080fd5b61008a61014e565b005b610094610150565b005b61009e6101d8565b6040516100ab9190610877565b60405180910390f35b6100bc610201565b6040516100c9919061092f565b60405180910390f35b6100ec60048036038101906100e791906106a9565b610217565b6040516100f99190610892565b60405180910390f35b61011c6004803603810190610117919061067c565b610413565b60405161012991906108b4565b60405180910390f35b61014c6004803603810190610147919061067c565b61041e565b005b565b610158610516565b73ffffffffffffffffffffffffffffffffffffffff166101766101d8565b73ffffffffffffffffffffffffffffffffffffffff16146101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c3906108ef565b60405180910390fd5b6101d6600061051e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060149054906101000a900463ffffffff1681565b606082826040516102289190610860565b6040518091039020847f1a111c5dcf9a71088bd5e1797fdfaf399fec2afbb24aca247e4e3e9f4b61df9160405160405180910390a36000806000602086019050805160f01c9250600281019050805160e01c91506004810190505960405260008361ffff1667ffffffffffffffff8111156102a6576102a5610b8d565b5b6040519080825280602002602001820160405280156102d45781602001602082028036833780820191505090505b50905060005b8461ffff168160ff1610156103e357600080845160f01c91506002850194508451905060208501945061030c81610413565b61034b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103429061090f565b60405180910390fd5b600060405160008185896000875af19150838701965050806103a457836040517fe1de947700000000000000000000000000000000000000000000000000000000815260040161039b919061094a565b60405180910390fd5b80858560ff16815181106103bb576103ba610b5e565b5b60200260200101901515908115158152505050505080806103db90610b05565b9150506102da565b5082600060146101000a81548163ffffffff021916908363ffffffff160217905550809550505050505092915050565b600060019050919050565b610426610516565b73ffffffffffffffffffffffffffffffffffffffff166104446101d8565b73ffffffffffffffffffffffffffffffffffffffff161461049a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610491906108ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610501906108cf565b60405180910390fd5b6105138161051e565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006105f56105f08461098a565b610965565b90508281526020810184848401111561061157610610610bc1565b5b61061c848285610a92565b509392505050565b60008135905061063381610c82565b92915050565b60008135905061064881610c99565b92915050565b600082601f83011261066357610662610bbc565b5b81356106738482602086016105e2565b91505092915050565b60006020828403121561069257610691610bcb565b5b60006106a084828501610624565b91505092915050565b600080604083850312156106c0576106bf610bcb565b5b60006106ce85828601610639565b925050602083013567ffffffffffffffff8111156106ef576106ee610bc6565b5b6106fb8582860161064e565b9150509250929050565b6000610711838361078a565b60208301905092915050565b61072681610a1b565b82525050565b6000610737826109cb565b61074181856109ee565b935061074c836109bb565b8060005b8381101561077d5781516107648882610705565b975061076f836109e1565b925050600181019050610750565b5085935050505092915050565b61079381610a2d565b82525050565b6107a281610a2d565b82525050565b60006107b3826109d6565b6107bd81856109ff565b93506107cd818560208601610aa1565b80840191505092915050565b60006107e6602683610a0a565b91506107f182610be1565b604082019050919050565b6000610809602083610a0a565b915061081482610c30565b602082019050919050565b600061082c601e83610a0a565b915061083782610c59565b602082019050919050565b61084b81610a63565b82525050565b61085a81610a80565b82525050565b600061086c82846107a8565b915081905092915050565b600060208201905061088c600083018461071d565b92915050565b600060208201905081810360008301526108ac818461072c565b905092915050565b60006020820190506108c96000830184610799565b92915050565b600060208201905081810360008301526108e8816107d9565b9050919050565b60006020820190508181036000830152610908816107fc565b9050919050565b600060208201905081810360008301526109288161081f565b9050919050565b60006020820190506109446000830184610842565b92915050565b600060208201905061095f6000830184610851565b92915050565b600061096f610980565b905061097b8282610ad4565b919050565b6000604051905090565b600067ffffffffffffffff8211156109a5576109a4610b8d565b5b6109ae82610bd0565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610a2682610a43565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b6000610a8b82610a73565b9050919050565b82818337600083830152505050565b60005b83811015610abf578082015181840152602081019050610aa4565b83811115610ace576000848401525b50505050565b610add82610bd0565b810181811067ffffffffffffffff82111715610afc57610afb610b8d565b5b80604052505050565b6000610b1082610a73565b915060ff821415610b2457610b23610b2f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f7420617574686f72697a656420746f2063616c6c20616464726573730000600082015250565b610c8b81610a1b565b8114610c9657600080fd5b50565b610ca281610a39565b8114610cad57600080fd5b5056fea2646970667358221220c8f2d99a6466cfb4823fbfa8158e8f7bd92afc42bcc1fb4cabb9f70b1eeace0364736f6c63430008070033";

export class ChainBatchWriteAdapter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainBatchWriteAdapter> {
    return super.deploy(overrides || {}) as Promise<ChainBatchWriteAdapter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChainBatchWriteAdapter {
    return super.attach(address) as ChainBatchWriteAdapter;
  }
  connect(signer: Signer): ChainBatchWriteAdapter__factory {
    return super.connect(signer) as ChainBatchWriteAdapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainBatchWriteAdapterInterface {
    return new utils.Interface(_abi) as ChainBatchWriteAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainBatchWriteAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainBatchWriteAdapter;
  }
}
