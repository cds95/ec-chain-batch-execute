/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainBatchWriteAdapter,
  ChainBatchWriteAdapterInterface,
} from "../ChainBatchWriteAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "CallFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "canCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytesData",
        type: "bytes",
      },
    ],
    name: "fulfillBytes",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestBytes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c4c8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806311411e8a14610067578063715018a6146100715780638da5cb5b1461007b578063c2fb852314610099578063cb6e7a89146100c9578063f2fde38b146100f9575b600080fd5b61006f610115565b005b610079610117565b005b61008361019f565b6040516100909190610808565b60405180910390f35b6100b360048036038101906100ae9190610649565b6101c8565b6040516100c09190610823565b60405180910390f35b6100e360048036038101906100de919061061c565b6103b3565b6040516100f09190610845565b60405180910390f35b610113600480360381019061010e919061061c565b6103be565b005b565b61011f6104b6565b73ffffffffffffffffffffffffffffffffffffffff1661013d61019f565b73ffffffffffffffffffffffffffffffffffffffff1614610193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018a90610880565b60405180910390fd5b61019d60006104be565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606082826040516101d991906107f1565b6040518091039020847f1a111c5dcf9a71088bd5e1797fdfaf399fec2afbb24aca247e4e3e9f4b61df9160405160405180910390a3600080602085019050600181015160001a610100600083015160001a020191505960405260028101905060008261ffff1667ffffffffffffffff81111561025857610257610af3565b5b6040519080825280602002602001820160405280156102865781602001602082028036833780820191505090505b50905060005b8361ffff168160ff1610156103a557600080600185015160001a610100600087015160001a02019150600285019450845190506020850194506102ce816103b3565b61030d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610304906108a0565b60405180910390fd5b600060405160008185896000875af191508387019650508061036657836040517fe1de947700000000000000000000000000000000000000000000000000000000815260040161035d91906108c0565b60405180910390fd5b80858560ff168151811061037d5761037c610ac4565b5b602002602001019015159081151581525050505050808061039d90610a6b565b91505061028c565b508094505050505092915050565b600060019050919050565b6103c66104b6565b73ffffffffffffffffffffffffffffffffffffffff166103e461019f565b73ffffffffffffffffffffffffffffffffffffffff161461043a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043190610880565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a190610860565b60405180910390fd5b6104b3816104be565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061059561059084610900565b6108db565b9050828152602081018484840111156105b1576105b0610b27565b5b6105bc8482856109f8565b509392505050565b6000813590506105d381610be8565b92915050565b6000813590506105e881610bff565b92915050565b600082601f83011261060357610602610b22565b5b8135610613848260208601610582565b91505092915050565b60006020828403121561063257610631610b31565b5b6000610640848285016105c4565b91505092915050565b600080604083850312156106605761065f610b31565b5b600061066e858286016105d9565b925050602083013567ffffffffffffffff81111561068f5761068e610b2c565b5b61069b858286016105ee565b9150509250929050565b60006106b1838361072a565b60208301905092915050565b6106c681610991565b82525050565b60006106d782610941565b6106e18185610964565b93506106ec83610931565b8060005b8381101561071d57815161070488826106a5565b975061070f83610957565b9250506001810190506106f0565b5085935050505092915050565b610733816109a3565b82525050565b610742816109a3565b82525050565b60006107538261094c565b61075d8185610975565b935061076d818560208601610a07565b80840191505092915050565b6000610786602683610980565b915061079182610b47565b604082019050919050565b60006107a9602083610980565b91506107b482610b96565b602082019050919050565b60006107cc601e83610980565b91506107d782610bbf565b602082019050919050565b6107eb816109e6565b82525050565b60006107fd8284610748565b915081905092915050565b600060208201905061081d60008301846106bd565b92915050565b6000602082019050818103600083015261083d81846106cc565b905092915050565b600060208201905061085a6000830184610739565b92915050565b6000602082019050818103600083015261087981610779565b9050919050565b600060208201905081810360008301526108998161079c565b9050919050565b600060208201905081810360008301526108b9816107bf565b9050919050565b60006020820190506108d560008301846107e2565b92915050565b60006108e56108f6565b90506108f18282610a3a565b919050565b6000604051905090565b600067ffffffffffffffff82111561091b5761091a610af3565b5b61092482610b36565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061099c826109b9565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b60006109f1826109d9565b9050919050565b82818337600083830152505050565b60005b83811015610a25578082015181840152602081019050610a0a565b83811115610a34576000848401525b50505050565b610a4382610b36565b810181811067ffffffffffffffff82111715610a6257610a61610af3565b5b80604052505050565b6000610a76826109d9565b915060ff821415610a8a57610a89610a95565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f7420617574686f72697a656420746f2063616c6c20616464726573730000600082015250565b610bf181610991565b8114610bfc57600080fd5b50565b610c08816109af565b8114610c1357600080fd5b5056fea264697066735822122017270a11916a9bc523a506ae2b8db7ae3ef681c9f92f8a13a5c8f848c1ce52a064736f6c63430008070033";

export class ChainBatchWriteAdapter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainBatchWriteAdapter> {
    return super.deploy(overrides || {}) as Promise<ChainBatchWriteAdapter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChainBatchWriteAdapter {
    return super.attach(address) as ChainBatchWriteAdapter;
  }
  connect(signer: Signer): ChainBatchWriteAdapter__factory {
    return super.connect(signer) as ChainBatchWriteAdapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainBatchWriteAdapterInterface {
    return new utils.Interface(_abi) as ChainBatchWriteAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainBatchWriteAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainBatchWriteAdapter;
  }
}
