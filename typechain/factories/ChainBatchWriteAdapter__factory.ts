/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainBatchWriteAdapter,
  ChainBatchWriteAdapterInterface,
} from "../ChainBatchWriteAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "CallFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    inputs: [],
    name: "LastDataRecordId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "canCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytesData",
        type: "bytes",
      },
    ],
    name: "fulfillBytes",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestBytes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cf68061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639bc17db81161005b5780639bc17db8146100b4578063c2fb8523146100d2578063cb6e7a8914610102578063f2fde38b146101325761007d565b806311411e8a14610082578063715018a61461008c5780638da5cb5b14610096575b600080fd5b61008a61014e565b005b610094610150565b005b61009e6101d8565b6040516100ab9190610887565b60405180910390f35b6100bc610201565b6040516100c9919061093f565b60405180910390f35b6100ec60048036038101906100e791906106b9565b610217565b6040516100f991906108a2565b60405180910390f35b61011c6004803603810190610117919061068c565b610423565b60405161012991906108c4565b60405180910390f35b61014c6004803603810190610147919061068c565b61042e565b005b565b610158610526565b73ffffffffffffffffffffffffffffffffffffffff166101766101d8565b73ffffffffffffffffffffffffffffffffffffffff16146101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c3906108ff565b60405180910390fd5b6101d6600061052e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060149054906101000a900463ffffffff1681565b606082826040516102289190610870565b6040518091039020847f1a111c5dcf9a71088bd5e1797fdfaf399fec2afbb24aca247e4e3e9f4b61df9160405160405180910390a36000806000602086019050805160f01c9250600281019050805160e01c91506004810190505960405260008361ffff1667ffffffffffffffff8111156102a6576102a5610b9d565b5b6040519080825280602002602001820160405280156102d45781602001602082028036833780820191505090505b50905060005b8461ffff168160ff1610156103f357600080600185015160001a610100600087015160001a020191506002850194508451905060208501945061031c81610423565b61035b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103529061091f565b60405180910390fd5b600060405160008185896000875af19150838701965050806103b457836040517fe1de94770000000000000000000000000000000000000000000000000000000081526004016103ab919061095a565b60405180910390fd5b80858560ff16815181106103cb576103ca610b6e565b5b60200260200101901515908115158152505050505080806103eb90610b15565b9150506102da565b5082600060146101000a81548163ffffffff021916908363ffffffff160217905550809550505050505092915050565b600060019050919050565b610436610526565b73ffffffffffffffffffffffffffffffffffffffff166104546101d8565b73ffffffffffffffffffffffffffffffffffffffff16146104aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a1906108ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561051a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610511906108df565b60405180910390fd5b6105238161052e565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006106056106008461099a565b610975565b90508281526020810184848401111561062157610620610bd1565b5b61062c848285610aa2565b509392505050565b60008135905061064381610c92565b92915050565b60008135905061065881610ca9565b92915050565b600082601f83011261067357610672610bcc565b5b81356106838482602086016105f2565b91505092915050565b6000602082840312156106a2576106a1610bdb565b5b60006106b084828501610634565b91505092915050565b600080604083850312156106d0576106cf610bdb565b5b60006106de85828601610649565b925050602083013567ffffffffffffffff8111156106ff576106fe610bd6565b5b61070b8582860161065e565b9150509250929050565b6000610721838361079a565b60208301905092915050565b61073681610a2b565b82525050565b6000610747826109db565b61075181856109fe565b935061075c836109cb565b8060005b8381101561078d5781516107748882610715565b975061077f836109f1565b925050600181019050610760565b5085935050505092915050565b6107a381610a3d565b82525050565b6107b281610a3d565b82525050565b60006107c3826109e6565b6107cd8185610a0f565b93506107dd818560208601610ab1565b80840191505092915050565b60006107f6602683610a1a565b915061080182610bf1565b604082019050919050565b6000610819602083610a1a565b915061082482610c40565b602082019050919050565b600061083c601e83610a1a565b915061084782610c69565b602082019050919050565b61085b81610a73565b82525050565b61086a81610a90565b82525050565b600061087c82846107b8565b915081905092915050565b600060208201905061089c600083018461072d565b92915050565b600060208201905081810360008301526108bc818461073c565b905092915050565b60006020820190506108d960008301846107a9565b92915050565b600060208201905081810360008301526108f8816107e9565b9050919050565b600060208201905081810360008301526109188161080c565b9050919050565b600060208201905081810360008301526109388161082f565b9050919050565b60006020820190506109546000830184610852565b92915050565b600060208201905061096f6000830184610861565b92915050565b600061097f610990565b905061098b8282610ae4565b919050565b6000604051905090565b600067ffffffffffffffff8211156109b5576109b4610b9d565b5b6109be82610be0565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610a3682610a53565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b6000610a9b82610a83565b9050919050565b82818337600083830152505050565b60005b83811015610acf578082015181840152602081019050610ab4565b83811115610ade576000848401525b50505050565b610aed82610be0565b810181811067ffffffffffffffff82111715610b0c57610b0b610b9d565b5b80604052505050565b6000610b2082610a83565b915060ff821415610b3457610b33610b3f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f7420617574686f72697a656420746f2063616c6c20616464726573730000600082015250565b610c9b81610a2b565b8114610ca657600080fd5b50565b610cb281610a49565b8114610cbd57600080fd5b5056fea2646970667358221220b2dbbfa8d6e3be9a6ddb9aa4f4cb4a050ba3453583c3c1c46aa2df37d1bb01c964736f6c63430008070033";

export class ChainBatchWriteAdapter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainBatchWriteAdapter> {
    return super.deploy(overrides || {}) as Promise<ChainBatchWriteAdapter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChainBatchWriteAdapter {
    return super.attach(address) as ChainBatchWriteAdapter;
  }
  connect(signer: Signer): ChainBatchWriteAdapter__factory {
    return super.connect(signer) as ChainBatchWriteAdapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainBatchWriteAdapterInterface {
    return new utils.Interface(_abi) as ChainBatchWriteAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainBatchWriteAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainBatchWriteAdapter;
  }
}
