/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ECRegistryMap, ECRegistryMapInterface } from "../ECRegistryMap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "mode",
        type: "bool",
      },
    ],
    name: "contractControllerEvent",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "team_id",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "real_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "real_team_id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "full_name",
            type: "string",
          },
        ],
        internalType: "struct ECRegistryMap.playerStruct[]",
        name: "_newPlayers",
        type: "tuple[]",
      },
    ],
    name: "addPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "city",
            type: "string",
          },
          {
            internalType: "string",
            name: "tricode",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "real_id",
            type: "uint256",
          },
        ],
        internalType: "struct ECRegistryMap.teamStruct[]",
        name: "_newTeams",
        type: "tuple[]",
      },
    ],
    name: "addTeam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getContractControllerAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getContractControllerContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractControllerLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "team_id",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "real_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "real_team_id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "full_name",
            type: "string",
          },
        ],
        internalType: "struct ECRegistryMap.playerStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTeams",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "city",
            type: "string",
          },
          {
            internalType: "string",
            name: "tricode",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "real_id",
            type: "uint256",
          },
        ],
        internalType: "struct ECRegistryMap.teamStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "playerCount",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "team_id",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "real_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "real_team_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "full_name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_mode",
        type: "bool",
      },
    ],
    name: "setContractController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "teamCount",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "teams",
    outputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "city",
        type: "string",
      },
      {
        internalType: "string",
        name: "tricode",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "real_id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "_ids",
        type: "uint16[]",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "team_id",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "real_id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "real_team_id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "full_name",
            type: "string",
          },
        ],
        internalType: "struct ECRegistryMap.playerStruct[]",
        name: "_newPlayers",
        type: "tuple[]",
      },
    ],
    name: "updatePlayers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "_ids",
        type: "uint16[]",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "id",
            type: "uint16",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "city",
            type: "string",
          },
          {
            internalType: "string",
            name: "tricode",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "real_id",
            type: "uint256",
          },
        ],
        internalType: "struct ECRegistryMap.teamStruct[]",
        name: "_newTeams",
        type: "tuple[]",
      },
    ],
    name: "updateTeams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6129d380620001146000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063de064cb811610071578063de064cb81461029c578063e64c00da146102cc578063e99d771b146102e8578063f2fde38b14610304578063f4ec521e146103205761010b565b80638da5cb5b1461021457806393279edb14610232578063c805923a14610262578063cad70a611461027e5761010b565b8063302bcc57116100de578063302bcc57146101b0578063715018a6146101ce5780638b5b9ccc146101d85780638caa0083146101f65761010b565b806309fbc9ce1461011057806315f4b0e61461012c57806328b7c30d146101485780632c185e5f1461017c575b600080fd5b61012a60048036038101906101259190611902565b61033e565b005b610146600480360381019061014191906118b5565b610478565b005b610162600480360381019061015d9190611a04565b6105bf565b604051610173959493929190611ebd565b60405180910390f35b61019660048036038101906101919190611a04565b61079b565b6040516101a7959493929190611f25565b60405180910390f35b6101b8610875565b6040516101c59190611ea2565b60405180910390f35b6101d6610889565b005b6101e0610911565b6040516101ed9190611de3565b60405180910390f35b6101fe610afa565b60405161020b9190611ea2565b60405180910390f35b61021c610b0e565b6040516102299190611d9f565b60405180910390f35b61024c600480360381019061024791906117fb565b610b37565b6040516102599190611e27565b60405180910390f35b61027c60048036038101906102779190611828565b610b54565b005b610286610c43565b6040516102939190611f7f565b60405180910390f35b6102b660048036038101906102b19190611a31565b610c54565b6040516102c39190611d9f565b60405180910390f35b6102e660048036038101906102e19190611868565b610c71565b005b61030260048036038101906102fd9190611983565b610db8565b005b61031e600480360381019061031991906117fb565b610ef2565b005b610328610fea565b6040516103359190611e05565b60405180910390f35b610346610b0e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061038f575061038e3360016112cd90919063ffffffff16565b5b6103ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c590611e42565b60405180910390fd5b60005b848490508161ffff1610156104715782828261ffff168181106103f7576103f66125e0565b5b90506020028101906104099190611ffd565b6005600087878561ffff16818110610424576104236125e0565b5b90506020020160208101906104399190611a04565b61ffff1661ffff168152602001908152602001600020818161045b9190612892565b90505080806104699061250a565b9150506103d1565b5050505050565b610480610b0e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104c957506104c83360016112cd90919063ffffffff16565b5b610508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ff90611e42565b60405180910390fd5b60005b828290508161ffff1610156105ba5760006004600081819054906101000a900461ffff166105389061250a565b91906101000a81548161ffff021916908361ffff1602179055905083838361ffff1681811061056a576105696125e0565b5b905060200281019061057c9190612025565b600360008361ffff1661ffff16815260200190815260200160002081816105a391906128a0565b9050505080806105b29061250a565b91505061050b565b505050565b60036020528060005260406000206000915090508060000160009054906101000a900461ffff16908060010180546105f6906124bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610622906124bc565b801561066f5780601f106106445761010080835404028352916020019161066f565b820191906000526020600020905b81548152906001019060200180831161065257829003601f168201915b505050505090806002018054610684906124bc565b80601f01602080910402602001604051908101604052809291908181526020018280546106b0906124bc565b80156106fd5780601f106106d2576101008083540402835291602001916106fd565b820191906000526020600020905b8154815290600101906020018083116106e057829003601f168201915b505050505090806003018054610712906124bc565b80601f016020809104026020016040519081016040528092919081815260200182805461073e906124bc565b801561078b5780601f106107605761010080835404028352916020019161078b565b820191906000526020600020905b81548152906001019060200180831161076e57829003601f168201915b5050505050908060040154905085565b60056020528060005260406000206000915090508060000160009054906101000a900461ffff16908060000160029054906101000a900461ffff16908060010154908060020154908060030180546107f2906124bc565b80601f016020809104026020016040519081016040528092919081815260200182805461081e906124bc565b801561086b5780601f106108405761010080835404028352916020019161086b565b820191906000526020600020905b81548152906001019060200180831161084e57829003601f168201915b5050505050905085565b600660009054906101000a900461ffff1681565b6108916112fd565b73ffffffffffffffffffffffffffffffffffffffff166108af610b0e565b73ffffffffffffffffffffffffffffffffffffffff1614610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc90611e82565b60405180910390fd5b61090f6000611305565b565b60606000600660009054906101000a900461ffff1661ffff1667ffffffffffffffff8111156109435761094261260f565b5b60405190808252806020026020018201604052801561097c57816020015b61096961163b565b8152602001906001900390816109615790505b5090506000600190505b600660009054906101000a900461ffff1661ffff168161ffff1611610af257600560008261ffff1661ffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016001820154815260200160028201548152602001600382018054610a2f906124bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5b906124bc565b8015610aa85780601f10610a7d57610100808354040283529160200191610aa8565b820191906000526020600020905b815481529060010190602001808311610a8b57829003601f168201915b50505050508152505082600183610abf919061210c565b61ffff1681518110610ad457610ad36125e0565b5b60200260200101819052508080610aea9061250a565b915050610986565b508091505090565b600460009054906101000a900461ffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610b4d8260016112cd90919063ffffffff16565b9050919050565b610b5c6112fd565b73ffffffffffffffffffffffffffffffffffffffff16610b7a610b0e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc790611e82565b60405180910390fd5b8015610bf057610bea8260016113c990919063ffffffff16565b50610c06565b610c048260016113f990919063ffffffff16565b505b7f973bbc2cf6ccb6e84c17881555833ddc6ab07de3420c5bb19022b8553f7a52ae8282604051610c37929190611dba565b60405180910390a15050565b6000610c4f6001611429565b905090565b6000610c6a82600161143e90919063ffffffff16565b9050919050565b610c79610b0e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610cc25750610cc13360016112cd90919063ffffffff16565b5b610d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf890611e42565b60405180910390fd5b60005b828290508161ffff161015610db35760006006600081819054906101000a900461ffff16610d319061250a565b91906101000a81548161ffff021916908361ffff1602179055905083838361ffff16818110610d6357610d626125e0565b5b9050602002810190610d759190611ffd565b600560008361ffff1661ffff1681526020019081526020016000208181610d9c9190612892565b905050508080610dab9061250a565b915050610d04565b505050565b610dc0610b0e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e095750610e083360016112cd90919063ffffffff16565b5b610e48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3f90611e42565b60405180910390fd5b60005b848490508161ffff161015610eeb5782828261ffff16818110610e7157610e706125e0565b5b9050602002810190610e839190612025565b6003600087878561ffff16818110610e9e57610e9d6125e0565b5b9050602002016020810190610eb39190611a04565b61ffff1661ffff1681526020019081526020016000208181610ed591906128a0565b9050508080610ee39061250a565b915050610e4b565b5050505050565b610efa6112fd565b73ffffffffffffffffffffffffffffffffffffffff16610f18610b0e565b73ffffffffffffffffffffffffffffffffffffffff1614610f6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6590611e82565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd590611e62565b60405180910390fd5b610fe781611305565b50565b60606000600460009054906101000a900461ffff1661ffff1667ffffffffffffffff81111561101c5761101b61260f565b5b60405190808252806020026020018201604052801561105557816020015b611042611672565b81526020019060019003908161103a5790505b5090506000600190505b600460009054906101000a900461ffff1661ffff168161ffff16116112c557600360008261ffff1661ffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016001820180546110d4906124bc565b80601f0160208091040260200160405190810160405280929190818152602001828054611100906124bc565b801561114d5780601f106111225761010080835404028352916020019161114d565b820191906000526020600020905b81548152906001019060200180831161113057829003601f168201915b50505050508152602001600282018054611166906124bc565b80601f0160208091040260200160405190810160405280929190818152602001828054611192906124bc565b80156111df5780601f106111b4576101008083540402835291602001916111df565b820191906000526020600020905b8154815290600101906020018083116111c257829003601f168201915b505050505081526020016003820180546111f8906124bc565b80601f0160208091040260200160405190810160405280929190818152602001828054611224906124bc565b80156112715780601f1061124657610100808354040283529160200191611271565b820191906000526020600020905b81548152906001019060200180831161125457829003601f168201915b5050505050815260200160048201548152505082600183611292919061210c565b61ffff16815181106112a7576112a66125e0565b5b602002602001018190525080806112bd9061250a565b91505061105f565b508091505090565b60006112f5836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611458565b905092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006113f1836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61147b565b905092915050565b6000611421836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6114eb565b905092915050565b6000611437826000016115ff565b9050919050565b600061144d8360000183611610565b60001c905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b60006114878383611458565b6114e05782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506114e5565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146115f357600060018261151d9190612140565b90506000600186600001805490506115359190612140565b90508181146115a4576000866000018281548110611556576115556125e0565b5b906000526020600020015490508087600001848154811061157a576115796125e0565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806115b8576115b76125b1565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506115f9565b60009150505b92915050565b600081600001805490509050919050565b6000826000018281548110611628576116276125e0565b5b9060005260206000200154905092915050565b6040518060a00160405280600061ffff168152602001600061ffff1681526020016000815260200160008152602001606081525090565b6040518060a00160405280600061ffff168152602001606081526020016060815260200160608152602001600081525090565b6000813590506116b48161293c565b92915050565b60008083601f8401126116d0576116cf612683565b5b8235905067ffffffffffffffff8111156116ed576116ec61267e565b5b60208301915083602082028301111561170957611708612692565b5b9250929050565b60008083601f84011261172657611725612683565b5b8235905067ffffffffffffffff8111156117435761174261267e565b5b60208301915083602082028301111561175f5761175e612692565b5b9250929050565b60008083601f84011261177c5761177b612683565b5b8235905067ffffffffffffffff8111156117995761179861267e565b5b6020830191508360208202830111156117b5576117b4612692565b5b9250929050565b6000813590506117cb81612953565b92915050565b6000813590506117e08161296a565b92915050565b6000813590506117f581612981565b92915050565b600060208284031215611811576118106126a1565b5b600061181f848285016116a5565b91505092915050565b6000806040838503121561183f5761183e6126a1565b5b600061184d858286016116a5565b925050602061185e858286016117bc565b9150509250929050565b6000806020838503121561187f5761187e6126a1565b5b600083013567ffffffffffffffff81111561189d5761189c61269c565b5b6118a9858286016116ba565b92509250509250929050565b600080602083850312156118cc576118cb6126a1565b5b600083013567ffffffffffffffff8111156118ea576118e961269c565b5b6118f685828601611710565b92509250509250929050565b6000806000806040858703121561191c5761191b6126a1565b5b600085013567ffffffffffffffff81111561193a5761193961269c565b5b61194687828801611766565b9450945050602085013567ffffffffffffffff8111156119695761196861269c565b5b611975878288016116ba565b925092505092959194509250565b6000806000806040858703121561199d5761199c6126a1565b5b600085013567ffffffffffffffff8111156119bb576119ba61269c565b5b6119c787828801611766565b9450945050602085013567ffffffffffffffff8111156119ea576119e961269c565b5b6119f687828801611710565b925092505092959194509250565b600060208284031215611a1a57611a196126a1565b5b6000611a28848285016117d1565b91505092915050565b600060208284031215611a4757611a466126a1565b5b6000611a55848285016117e6565b91505092915050565b6000611a6a8383611c69565b905092915050565b6000611a7e8383611cdf565b905092915050565b611a8f816121ba565b82525050565b6000611aa082612082565b611aaa81856120c8565b935083602082028501611abc8561204d565b8060005b85811015611af85784840389528151611ad98582611a5e565b9450611ae4836120ae565b925060208a01995050600181019050611ac0565b50829750879550505050505092915050565b6000611b158261208d565b611b1f81856120d9565b935083602082028501611b318561205d565b8060005b85811015611b6d5784840389528151611b4e8582611a72565b9450611b59836120bb565b925060208a01995050600181019050611b35565b50829750879550505050505092915050565b611b88816121cc565b82525050565b6000611b99826120a3565b611ba381856120ea565b9350611bb3818560208601612327565b611bbc816126a6565b840191505092915050565b6000611bd2826120a3565b611bdc81856120fb565b9350611bec818560208601612327565b611bf5816126a6565b840191505092915050565b6000611c0d600e836120fb565b9150611c1882612703565b602082019050919050565b6000611c306026836120fb565b9150611c3b8261272c565b604082019050919050565b6000611c536020836120fb565b9150611c5e8261277b565b602082019050919050565b600060a083016000830151611c816000860182611d63565b506020830151611c946020860182611d63565b506040830151611ca76040860182611d81565b506060830151611cba6060860182611d81565b5060808301518482036080860152611cd28282611b8e565b9150508091505092915050565b600060a083016000830151611cf76000860182611d63565b5060208301518482036020860152611d0f8282611b8e565b91505060408301518482036040860152611d298282611b8e565b91505060608301518482036060860152611d438282611b8e565b9150506080830151611d586080860182611d81565b508091505092915050565b611d6c816121d8565b82525050565b611d7b816121d8565b82525050565b611d8a81612206565b82525050565b611d9981612206565b82525050565b6000602082019050611db46000830184611a86565b92915050565b6000604082019050611dcf6000830185611a86565b611ddc6020830184611b7f565b9392505050565b60006020820190508181036000830152611dfd8184611a95565b905092915050565b60006020820190508181036000830152611e1f8184611b0a565b905092915050565b6000602082019050611e3c6000830184611b7f565b92915050565b60006020820190508181036000830152611e5b81611c00565b9050919050565b60006020820190508181036000830152611e7b81611c23565b9050919050565b60006020820190508181036000830152611e9b81611c46565b9050919050565b6000602082019050611eb76000830184611d72565b92915050565b600060a082019050611ed26000830188611d72565b8181036020830152611ee48187611bc7565b90508181036040830152611ef88186611bc7565b90508181036060830152611f0c8185611bc7565b9050611f1b6080830184611d90565b9695505050505050565b600060a082019050611f3a6000830188611d72565b611f476020830187611d72565b611f546040830186611d90565b611f616060830185611d90565b8181036080830152611f738184611bc7565b90509695505050505050565b6000602082019050611f946000830184611d90565b92915050565b60008083356001602003843603038112611fb757611fb661268d565b5b80840192508235915067ffffffffffffffff821115611fd957611fd8612688565b5b602083019250600182023603831315611ff557611ff4612697565b5b509250929050565b60008235600160a0038336030381126120195761201861268d565b5b80830191505092915050565b60008235600160a0038336030381126120415761204061268d565b5b80830191505092915050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082905092915050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612117826121d8565b9150612122836121d8565b92508282101561213557612134612553565b5b828203905092915050565b600061214b82612206565b915061215683612206565b92508282101561216957612168612553565b5b828203905092915050565b601f8211156121b5576121868161206d565b61218f846124ac565b8101602085101561219e578190505b6121b26121aa856124ac565b830182612210565b50505b505050565b60006121c5826121e6565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b5b8181101561222f576122246000826126eb565b600181019050612211565b5050565b600061223e826121d8565b9050919050565b600061225082612206565b9050919050565b6122618383612098565b67ffffffffffffffff81111561227a5761227961260f565b5b61228482546124bc565b61228f828285612174565b6000601f8311600181146122be57600084156122ac578287013590505b6122b685826124ee565b86555061231e565b601f1984166122cc8661206d565b60005b828110156122f4578489013582556001820191506020850194506020810190506122cf565b86831015612311578489013561230d601f891682612535565b8355505b6001600288020188555050505b50505050505050565b60005b8381101561234557808201518184015260208101905061232a565b83811115612354576000848401525b50505050565b60008101600083018061236c81612652565b905061237881846128ae565b50505060008101602083018061238d81612652565b905061239981846128f4565b5050506001810160408301806123ae81612668565b90506123ba81846128d1565b5050506002810160608301806123cf81612668565b90506123db81846128d1565b50505060038101608083016123f08185611f9a565b6123fb818386612882565b505050505050565b60008101600083018061241581612652565b905061242181846128ae565b50505060018101602083016124368185611f9a565b612441818386612882565b5050505060028101604083016124578185611f9a565b612462818386612882565b5050505060038101606083016124788185611f9a565b612483818386612882565b5050505060048101608083018061249981612668565b90506124a581846128d1565b5050505050565b60006020601f8301049050919050565b600060028204905060018216806124d457607f821691505b602082108114156124e8576124e7612582565b5b50919050565b60006124fa8383612535565b9150826002028217905092915050565b6000612515826121d8565b915061ffff82141561252a57612529612553565b5b600182019050919050565b6000612546600019846008026126de565b1980831691505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b6000819050919050565b6000813561265f8161296a565b80915050919050565b6000813561267581612981565b80915050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160001b9050919050565b60008160101b9050919050565b600082821b905092915050565b600082821c905092915050565b6126f3612998565b6126fe818484612917565b505050565b7f4e6f7420417574686f7269736564000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061ffff6127b2846126b7565b9350801983169250808416831791505092915050565b600063ffff00006127d8846126c4565b9350801983169250808416831791505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61281a846126b7565b9350801983169250808416831791505092915050565b6000600883026128607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126d1565b61286a86836126d1565b95508019841693508086168417925050509392505050565b61288d838383612257565b505050565b61289c828261235a565b5050565b6128aa8282612403565b5050565b6128b782612233565b6128ca6128c38261263e565b83546127a4565b8255505050565b6128da82612245565b6128ed6128e682612648565b83546127ee565b8255505050565b6128fd82612233565b6129106129098261263e565b83546127c8565b8255505050565b61292083612245565b61293461292c82612648565b848454612830565b825550505050565b612945816121ba565b811461295057600080fd5b50565b61295c816121cc565b811461296757600080fd5b50565b612973816121d8565b811461297e57600080fd5b50565b61298a81612206565b811461299557600080fd5b50565b60009056fea26469706673582212205c099a4fbdfd372cfbfa6d33c1ff2728f5bf915b01128d331df15016e22598f964736f6c63430008070033";

export class ECRegistryMap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ECRegistryMap> {
    return super.deploy(overrides || {}) as Promise<ECRegistryMap>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ECRegistryMap {
    return super.attach(address) as ECRegistryMap;
  }
  connect(signer: Signer): ECRegistryMap__factory {
    return super.connect(signer) as ECRegistryMap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECRegistryMapInterface {
    return new utils.Interface(_abi) as ECRegistryMapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ECRegistryMap {
    return new Contract(address, _abi, signerOrProvider) as ECRegistryMap;
  }
}
